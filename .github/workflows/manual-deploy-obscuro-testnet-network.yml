# Deploys an Obscuro network on Azure for Testnet
# TO BE FILLED IN
#
# The Obscuro network is composed of 3 obscuro nodes running on individual vms
# It exposes the following ports:
# HTTP:       8025, 8026, 8027
# WebSocket:  9000, 9001, 9002
#
# Exposes the following addresses: (only accessible internally)
#  obscuro01.testnet.obscu.ro
#  obscuro01.testnet.obscu.ro
#  obscuro01.testnet.obscu.ro

name: Manual Deploy Obscuro network

on:
  workflow_dispatch:

env:
  L1HOST: testnet-gethnetwork-21.uksouth.azurecontainer.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Build and push obscuro node images'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
#          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/obscuronet/obscuro_enclave:latest -f dockerfiles/enclave.Dockerfile  .
#          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/obscuronet/obscuro_enclave:latest
#          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/obscuronet/obscuro_host:latest -f dockerfiles/host.Dockerfile .
#          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/obscuronet/obscuro_host:latest
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/obscuronet/obscuro_contractdeployer:latest -f testnet/contractdeployer.Dockerfile .
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/obscuronet/obscuro_contractdeployer:latest
          
      - name: 'Deploy Contracts'
        shell: bash
        run: |
          ./testnet/testnet-deploy-contracts.sh --l1host=${{ env.L1HOST }} --pkstring=f52e5418e349dccdda29b6ac8b0abe6576bb7713886aa85abea6181ba731f9bb
          source ./tesnet/.env
          echo "MGMTCONTRACTADDR=$MGMTCONTRACTADDR" >> $GITHUB_ENV
          echo "ERC20CONTRACTADDR=ERC20CONTRACTADDR" >> $GITHUB_ENV
          echo "Contracts deployed to $MGMTCONTRACTADDR and $ERC20CONTRACTADDR"
        

  deploy:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        host_id: [0,1,2]
        include:
          - host_addr: 0x0000000000000000000000000000000000000000
            host_id: 0
          - host_addr: 0x0000000000000000000000000000000000000001
            host_id: 1
          - host_addr: 0x0000000000000000000000000000000000000002
            host_id: 2

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Create Obscuro node-${{ matrix.host_id }} on Azure'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az vm create -g Testnet -n "ObscuroNodeTestnet-${{ matrix.host_id }}-${{ GITHUB.RUN_NUMBER }}" \
            --admin-username obscurouser --admin-password "${{ secrets.OBSCURO_NODE_VM_PWD }}" \
            --public-ip-address-dns-name "obscuronode-${{ matrix.host_id }}-testnet-${{ GITHUB.RUN_NUMBER }}" \
            --tags deploygroup=ObscuroNodeTestnet-${{ matrix.host_id }}-${{ GITHUB.RUN_NUMBER }}
            --size Standard_D2_v4 --image ubuntults --public-ip-sku Basic --authentication-type password

      - name: 'Set up Obscuro node-${{ matrix.host_id }} on Azure'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az vm run-command invoke -g Testnet -n "ObscuroNodeTestnet-${{ matrix.host_id }}-${{ GITHUB.RUN_NUMBER }}"  \
            --command-id RunShellScript \
            --scripts 'mkdir -p /home/obscuro && git clone --depth 1 -b ${{ steps.extract_branch.outputs.branch }}  https://github.com/obscuronet/go-obscuro.git /home/obscuro/go-obscuro && curl -fsSL https://get.docker.com -o get-docker.sh && sh ./get-docker.sh && sudo apt-get update && sudo apt-get install -y jq && cd /home/obscuro/go-obscuro/testnet/ && ./start-testnet-node.sh --host_id=${{ matrix.host_addr }} --l1host=${{ env.L1HOST }} --mgmtcontractaddr=${{ env.MGMTCONTRACTADDR }} --erc20contractaddr=${{ env.ERC20CONTRACTADDR }}'



