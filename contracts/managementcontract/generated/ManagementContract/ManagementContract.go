// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ManagementContract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// StructsCrossChainMessage is an auto generated low-level Go binding around an user-defined struct.
type StructsCrossChainMessage struct {
	Sender           common.Address
	Sequence         uint64
	Nonce            uint32
	Topic            uint32
	Payload          []byte
	ConsistencyLevel uint8
}

// StructsHeaderCrossChainData is an auto generated low-level Go binding around an user-defined struct.
type StructsHeaderCrossChainData struct {
	BlockNumber *big.Int
	BlockHash   [32]byte
	Messages    []StructsCrossChainMessage
}

// StructsMetaRollup is an auto generated low-level Go binding around an user-defined struct.
type StructsMetaRollup struct {
	ParentHash   [32]byte
	Hash         [32]byte
	AggregatorID common.Address
	L1Block      [32]byte
	Number       *big.Int
}

// StructsTreeElement is an auto generated low-level Go binding around an user-defined struct.
type StructsTreeElement struct {
	ElementID *big.Int
	ParentID  *big.Int
	Rollup    StructsMetaRollup
}

// ManagementContractMetaData contains all meta data concerning the ManagementContract contract.
var ManagementContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageBusAddress\",\"type\":\"address\"}],\"name\":\"LogManagementContractCreated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ParentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"Hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"AggregatorID\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"L1Block\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"Number\",\"type\":\"uint256\"}],\"internalType\":\"structStructs.MetaRollup\",\"name\":\"r\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"_rollupData\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"topic\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"internalType\":\"structStructs.CrossChainMessage[]\",\"name\":\"messages\",\"type\":\"tuple[]\"}],\"internalType\":\"structStructs.HeaderCrossChainData\",\"name\":\"crossChainData\",\"type\":\"tuple\"}],\"name\":\"AddRollup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"Attested\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetHostAddresses\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ElementID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ParentID\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ParentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"Hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"AggregatorID\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"L1Block\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"Number\",\"type\":\"uint256\"}],\"internalType\":\"structStructs.MetaRollup\",\"name\":\"rollup\",\"type\":\"tuple\"}],\"internalType\":\"structStructs.TreeElement\",\"name\":\"element\",\"type\":\"tuple\"}],\"name\":\"GetParentRollup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ElementID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ParentID\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ParentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"Hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"AggregatorID\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"L1Block\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"Number\",\"type\":\"uint256\"}],\"internalType\":\"structStructs.MetaRollup\",\"name\":\"rollup\",\"type\":\"tuple\"}],\"internalType\":\"structStructs.TreeElement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rollupHash\",\"type\":\"bytes32\"}],\"name\":\"GetRollupByHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ElementID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ParentID\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ParentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"Hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"AggregatorID\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"L1Block\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"Number\",\"type\":\"uint256\"}],\"internalType\":\"structStructs.MetaRollup\",\"name\":\"rollup\",\"type\":\"tuple\"}],\"internalType\":\"structStructs.TreeElement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rollupID\",\"type\":\"uint256\"}],\"name\":\"GetRollupByID\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ElementID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ParentID\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ParentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"Hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"AggregatorID\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"L1Block\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"Number\",\"type\":\"uint256\"}],\"internalType\":\"structStructs.MetaRollup\",\"name\":\"rollup\",\"type\":\"tuple\"}],\"internalType\":\"structStructs.TreeElement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HasSecondCousinFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aggregatorID\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initSecret\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_hostAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_genesisAttestation\",\"type\":\"string\"}],\"name\":\"InitializeNetworkSecret\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ParentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"Hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"AggregatorID\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"L1Block\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"Number\",\"type\":\"uint256\"}],\"internalType\":\"structStructs.MetaRollup\",\"name\":\"r\",\"type\":\"tuple\"}],\"name\":\"InitializeTree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IsWithdrawalAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"requestReport\",\"type\":\"string\"}],\"name\":\"RequestNetworkSecret\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attesterID\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requesterID\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"attesterSig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"responseSecret\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"hostAddress\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"verifyAttester\",\"type\":\"bool\"}],\"name\":\"RespondNetworkSecret\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBus\",\"outputs\":[{\"internalType\":\"contractIMessageBus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b506040516200002090620000df565b604051809103906000f0801580156200003d573d6000803e3d6000fd5b50600a60026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbd726cf82ac9c3260b1495107182e336e0654b25c10915648c0cc15b2bb72cbf600a60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620000d1919062000132565b60405180910390a16200014f565b6116bc806200347483390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200011a82620000ed565b9050919050565b6200012c816200010d565b82525050565b600060208201905062000149600083018462000121565b92915050565b613315806200015f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806373bba8461161008c578063a1a227fa11610066578063a1a227fa14610227578063a52f433c14610245578063bbd79e1514610263578063e34fbfc81461027f576100cf565b806373bba846146101a95780638236a7ba146101c557806392aaec79146101f6576100cf565b806331b1d255146100d4578063324ff8661461010557806343348b2f1461012357806353e145f71461015357806357b706001461016f57806359a900711461018d575b600080fd5b6100ee60048036038101906100e9919061191c565b61029b565b6040516100fc929190611a3b565b60405180910390f35b61010d6102bb565b60405161011a9190611ba6565b60405180910390f35b61013d60048036038101906101389190611bc8565b610394565b60405161014a9190611bf5565b60405180910390f35b61016d60048036038101906101689190611cb8565b6103ea565b005b6101776105ba565b6040516101849190611bf5565b60405180910390f35b6101a760048036038101906101a29190611e53565b610794565b005b6101c360048036038101906101be9190611f16565b61085d565b005b6101df60048036038101906101da9190611f43565b6109e7565b6040516101ed929190611a3b565b60405180910390f35b610210600480360381019061020b9190611f70565b610a19565b60405161021e929190611a3b565b60405180910390f35b61022f610b02565b60405161023c9190611ffc565b60405180910390f35b61024d610b28565b60405161025a9190611bf5565b60405180910390f35b61027d600480360381019061027891906120e4565b610b3f565b005b610299600480360381019061029491906121c5565b610ce6565b005b60006102a5611648565b6102b28360200151610a19565b91509150915091565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561038b5783829060005260206000200180546102fe90612241565b80601f016020809104026020016040519081016040528092919081815260200182805461032a90612241565b80156103775780601f1061034c57610100808354040283529160200191610377565b820191906000526020600020905b81548152906001019060200180831161035a57829003601f168201915b5050505050815260200190600101906102df565b50505050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b806000013540816020013514610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9061231b565b60405180910390fd5b6001600085604001602081019061044c9190611bc8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca90612387565b60405180910390fd5b600360060160009054906101000a900460ff1661050857610503848036038101906104fe9190611f16565b61085d565b6105b4565b60008061051886600001356109e7565b915091508161055c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610553906123f3565b60405180910390fd5b6002600360040154111561059a5760006105746105ba565b90508015610598576000600a60016101000a81548160ff0219169083151502179055505b505b6105a8816000015187610d38565b6105b183610efd565b50505b50505050565b6000806105c5610ff5565b90506000806105d38361029b565b9150915081610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e9061245f565b60405180910390fd5b6000806106238361029b565b9150915081610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e906124cb565b60405180910390fd5b600060036002016000836000015181526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106cd57602002820191906000526020600020905b8154815260200190600101908083116106b9575b5050505050905060005b8151811015610785576000806107068484815181106106f9576106f86124eb565b5b6020026020010151610a19565b91509150816107215760009950505050505050505050610791565b8660000151816000015103610737575050610772565b6000600360020160008360000151815260200190815260200160002080549050111561076f5760019950505050505050505050610791565b50505b808061077d90612549565b9150506106d7565b50600096505050505050505b90565b600a60009054906101000a900460ff16156107ae57600080fd5b6001600a60006101000a81548160ff02191690831515021790555060018060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002839080600181540180825580915050600190039060005260206000200160009091909190915090816108549190612733565b50505050505050565b600360060160009054906101000a900460ff16156108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790612851565b60405180910390fd5b6001600360060160006101000a81548160ff021916908315150217905550604051806060016040528060018152602001600081526020018281525060036000016000600181526020019081526020016000206000820151816000015560208201518160010155604082015181600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015550509050506001600360040181905550600260036005018190555060016003600101600083602001518152602001908152602001600020819055506001600a60016101000a81548160ff02191690831515021790555050565b60006109f1611648565b610a106003600101600085815260200190815260200160002054610a19565b91509150915091565b6000610a23611648565b6000600360000160008581526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282016040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481525050815250509050600081600001511415819250925050915091565b600a60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60019054906101000a900460ff16905090565b6000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905080610b9a57600080fd5b8115610c51576000610bd088888688604051602001610bbc949392919061293c565b6040516020818303038152906040526110ce565b90506000610bde8288611109565b90508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c45906129f4565b60405180910390fd5b50505b60018060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600283908060018154018082558091505060019003906000526020600020016000909190919091509081610cdc9190612733565b5050505050505050565b81816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209182610d33929190612a1f565b505050565b6000600360050154905060036005016000815480929190610d5890612549565b9190505550600080610d6985610a19565b9150915081610dad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da490612b3b565b60405180910390fd5b604051806060016040528084815260200186815260200185803603810190610dd59190611f16565b815250600360000160008581526020019081526020016000206000820151816000015560208201518160010155604082015181600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015550509050506003600201600086815260200190815260200160002083908060018154018082558091505060019003906000526020600020016000909190919091505582600360010160008660200135815260200190815260200160002081905550600360040154816000015103610ef657826003600401819055505b5050505050565b6000818060400190610f0f9190612b6a565b9050905060005b81811015610ff057600a60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f238ae12848060400190610f6c9190612b6a565b84818110610f7d57610f7c6124eb565b5b9050602002810190610f8f9190612bcd565b426040518363ffffffff1660e01b8152600401610fad929190612ead565b600060405180830381600087803b158015610fc757600080fd5b505af1158015610fdb573d6000803e3d6000fd5b5050505080610fe990612549565b9050610f16565b505050565b610ffd611648565b6003600001600060036004015481526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282016040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152505081525050905090565b60006110da8251611130565b826040516020016110ec929190612f29565b604051602081830303815290604052805190602001209050919050565b60008060006111188585611290565b9150915061112581611311565b819250505092915050565b606060008203611177576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061128b565b600082905060005b600082146111a957808061119290612549565b915050600a826111a29190612f87565b915061117f565b60008167ffffffffffffffff8111156111c5576111c46116e7565b5b6040519080825280601f01601f1916602001820160405280156111f75781602001600182028036833780820191505090505b5090505b60008514611284576001826112109190612fb8565b9150600a8561121f9190612fec565b603061122b919061301d565b60f81b818381518110611241576112406124eb565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561127d9190612f87565b94506111fb565b8093505050505b919050565b60008060418351036112d15760008060006020860151925060408601519150606086015160001a90506112c5878285856114dd565b9450945050505061130a565b60408351036113015760008060208501519150604085015190506112f68683836115e9565b93509350505061130a565b60006002915091505b9250929050565b6000600481111561132557611324613051565b5b81600481111561133857611337613051565b5b03156114da576001600481111561135257611351613051565b5b81600481111561136557611364613051565b5b036113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c906130cc565b60405180910390fd5b600260048111156113b9576113b8613051565b5b8160048111156113cc576113cb613051565b5b0361140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140390613138565b60405180910390fd5b600360048111156114205761141f613051565b5b81600481111561143357611432613051565b5b03611473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146a906131ca565b60405180910390fd5b60048081111561148657611485613051565b5b81600481111561149957611498613051565b5b036114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d09061325c565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156115185760006003915091506115e0565b601b8560ff16141580156115305750601c8560ff1614155b156115425760006004915091506115e0565b600060018787878760405160008152602001604052604051611567949392919061329a565b6020604051602081039080840390855afa158015611589573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115d7576000600192509250506115e0565b80600092509250505b94509492505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c61162c919061301d565b905061163a878288856114dd565b935093505050935093915050565b6040518060600160405280600081526020016000815260200161166961166f565b81525090565b6040518060a001604052806000801916815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61171f826116d6565b810181811067ffffffffffffffff8211171561173e5761173d6116e7565b5b80604052505050565b60006117516116bd565b905061175d8282611716565b919050565b6000819050919050565b61177581611762565b811461178057600080fd5b50565b6000813590506117928161176c565b92915050565b6000819050919050565b6117ab81611798565b81146117b657600080fd5b50565b6000813590506117c8816117a2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117f9826117ce565b9050919050565b611809816117ee565b811461181457600080fd5b50565b60008135905061182681611800565b92915050565b600060a08284031215611842576118416116d1565b5b61184c60a0611747565b9050600061185c848285016117b9565b6000830152506020611870848285016117b9565b602083015250604061188484828501611817565b6040830152506060611898848285016117b9565b60608301525060806118ac84828501611783565b60808301525092915050565b600060e082840312156118ce576118cd6116d1565b5b6118d86060611747565b905060006118e884828501611783565b60008301525060206118fc84828501611783565b60208301525060406119108482850161182c565b60408301525092915050565b600060e08284031215611932576119316116c7565b5b6000611940848285016118b8565b91505092915050565b60008115159050919050565b61195e81611949565b82525050565b61196d81611762565b82525050565b61197c81611798565b82525050565b61198b816117ee565b82525050565b60a0820160008201516119a76000850182611973565b5060208201516119ba6020850182611973565b5060408201516119cd6040850182611982565b5060608201516119e06060850182611973565b5060808201516119f36080850182611964565b50505050565b60e082016000820151611a0f6000850182611964565b506020820151611a226020850182611964565b506040820151611a356040850182611991565b50505050565b600061010082019050611a516000830185611955565b611a5e60208301846119f9565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611acb578082015181840152602081019050611ab0565b60008484015250505050565b6000611ae282611a91565b611aec8185611a9c565b9350611afc818560208601611aad565b611b05816116d6565b840191505092915050565b6000611b1c8383611ad7565b905092915050565b6000602082019050919050565b6000611b3c82611a65565b611b468185611a70565b935083602082028501611b5885611a81565b8060005b85811015611b945784840389528151611b758582611b10565b9450611b8083611b24565b925060208a01995050600181019050611b5c565b50829750879550505050505092915050565b60006020820190508181036000830152611bc08184611b31565b905092915050565b600060208284031215611bde57611bdd6116c7565b5b6000611bec84828501611817565b91505092915050565b6000602082019050611c0a6000830184611955565b92915050565b600080fd5b600060a08284031215611c2b57611c2a611c10565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611c5957611c58611c34565b5b8235905067ffffffffffffffff811115611c7657611c75611c39565b5b602083019150836001820283011115611c9257611c91611c3e565b5b9250929050565b600060608284031215611caf57611cae611c10565b5b81905092915050565b60008060008060e08587031215611cd257611cd16116c7565b5b6000611ce087828801611c15565b94505060a085013567ffffffffffffffff811115611d0157611d006116cc565b5b611d0d87828801611c43565b935093505060c085013567ffffffffffffffff811115611d3057611d2f6116cc565b5b611d3c87828801611c99565b91505092959194509250565b60008083601f840112611d5e57611d5d611c34565b5b8235905067ffffffffffffffff811115611d7b57611d7a611c39565b5b602083019150836001820283011115611d9757611d96611c3e565b5b9250929050565b600080fd5b600067ffffffffffffffff821115611dbe57611dbd6116e7565b5b611dc7826116d6565b9050602081019050919050565b82818337600083830152505050565b6000611df6611df184611da3565b611747565b905082815260208101848484011115611e1257611e11611d9e565b5b611e1d848285611dd4565b509392505050565b600082601f830112611e3a57611e39611c34565b5b8135611e4a848260208601611de3565b91505092915050565b60008060008060008060808789031215611e7057611e6f6116c7565b5b6000611e7e89828a01611817565b965050602087013567ffffffffffffffff811115611e9f57611e9e6116cc565b5b611eab89828a01611d48565b9550955050604087013567ffffffffffffffff811115611ece57611ecd6116cc565b5b611eda89828a01611e25565b935050606087013567ffffffffffffffff811115611efb57611efa6116cc565b5b611f0789828a01611c43565b92509250509295509295509295565b600060a08284031215611f2c57611f2b6116c7565b5b6000611f3a8482850161182c565b91505092915050565b600060208284031215611f5957611f586116c7565b5b6000611f67848285016117b9565b91505092915050565b600060208284031215611f8657611f856116c7565b5b6000611f9484828501611783565b91505092915050565b6000819050919050565b6000611fc2611fbd611fb8846117ce565b611f9d565b6117ce565b9050919050565b6000611fd482611fa7565b9050919050565b6000611fe682611fc9565b9050919050565b611ff681611fdb565b82525050565b60006020820190506120116000830184611fed565b92915050565b600067ffffffffffffffff821115612032576120316116e7565b5b61203b826116d6565b9050602081019050919050565b600061205b61205684612017565b611747565b90508281526020810184848401111561207757612076611d9e565b5b612082848285611dd4565b509392505050565b600082601f83011261209f5761209e611c34565b5b81356120af848260208601612048565b91505092915050565b6120c181611949565b81146120cc57600080fd5b50565b6000813590506120de816120b8565b92915050565b60008060008060008060c08789031215612101576121006116c7565b5b600061210f89828a01611817565b965050602061212089828a01611817565b955050604087013567ffffffffffffffff811115612141576121406116cc565b5b61214d89828a0161208a565b945050606087013567ffffffffffffffff81111561216e5761216d6116cc565b5b61217a89828a0161208a565b935050608087013567ffffffffffffffff81111561219b5761219a6116cc565b5b6121a789828a01611e25565b92505060a06121b889828a016120cf565b9150509295509295509295565b600080602083850312156121dc576121db6116c7565b5b600083013567ffffffffffffffff8111156121fa576121f96116cc565b5b61220685828601611c43565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061225957607f821691505b60208210810361226c5761226b612212565b5b50919050565b600082825260208201905092915050565b7f526f6c6c757020696e636c756465732063726f737320636861696e206d65737360008201527f6167657320636f6d696e672066726f6d206120646966666572656e7420666f7260208201527f6b21000000000000000000000000000000000000000000000000000000000000604082015250565b6000612305604283612272565b915061231082612283565b606082019050919050565b60006020820190508181036000830152612334816122f8565b9050919050565b7f61676772656761746f72206e6f74206174746573746564000000000000000000600082015250565b6000612371601783612272565b915061237c8261233b565b602082019050919050565b600060208201905081810360008301526123a081612364565b9050919050565b7f756e61626c6520746f2066696e6420706172656e742068617368000000000000600082015250565b60006123dd601a83612272565b91506123e8826123a7565b602082019050919050565b6000602082019050818103600083015261240c816123d0565b9050919050565b7f6e6f20706172656e740000000000000000000000000000000000000000000000600082015250565b6000612449600983612272565b915061245482612413565b602082019050919050565b600060208201905081810360008301526124788161243c565b9050919050565b7f6e6f206772616e6420706172656e740000000000000000000000000000000000600082015250565b60006124b5600f83612272565b91506124c08261247f565b602082019050919050565b600060208201905081810360008301526124e4816124a8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061255482611762565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125865761258561251a565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026125f37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125b6565b6125fd86836125b6565b95508019841693508086168417925050509392505050565b600061263061262b61262684611762565b611f9d565b611762565b9050919050565b6000819050919050565b61264a83612615565b61265e61265682612637565b8484546125c3565b825550505050565b600090565b612673612666565b61267e818484612641565b505050565b5b818110156126a25761269760008261266b565b600181019050612684565b5050565b601f8211156126e7576126b881612591565b6126c1846125a6565b810160208510156126d0578190505b6126e46126dc856125a6565b830182612683565b50505b505050565b600082821c905092915050565b600061270a600019846008026126ec565b1980831691505092915050565b600061272383836126f9565b9150826002028217905092915050565b61273c82611a91565b67ffffffffffffffff811115612755576127546116e7565b5b61275f8254612241565b61276a8282856126a6565b600060209050601f83116001811461279d576000841561278b578287015190505b6127958582612717565b8655506127fd565b601f1984166127ab86612591565b60005b828110156127d3578489015182556001820191506020850194506020810190506127ae565b868310156127f057848901516127ec601f8916826126f9565b8355505b6001600288020188555050505b505050505050565b7f63616e6e6f7420626520696e697469616c697a656420616761696e0000000000600082015250565b600061283b601b83612272565b915061284682612805565b602082019050919050565b6000602082019050818103600083015261286a8161282e565b9050919050565b60008160601b9050919050565b600061288982612871565b9050919050565b600061289b8261287e565b9050919050565b6128b36128ae826117ee565b612890565b82525050565b600081905092915050565b60006128cf82611a91565b6128d981856128b9565b93506128e9818560208601611aad565b80840191505092915050565b600081519050919050565b600081905092915050565b6000612916826128f5565b6129208185612900565b9350612930818560208601611aad565b80840191505092915050565b600061294882876128a2565b60148201915061295882866128a2565b60148201915061296882856128c4565b9150612974828461290b565b915081905095945050505050565b7f63616c63756c61746564206164647265737320616e642061747465737465724960008201527f4420646f6e74206d617463680000000000000000000000000000000000000000602082015250565b60006129de602c83612272565b91506129e982612982565b604082019050919050565b60006020820190508181036000830152612a0d816129d1565b9050919050565b600082905092915050565b612a298383612a14565b67ffffffffffffffff811115612a4257612a416116e7565b5b612a4c8254612241565b612a578282856126a6565b6000601f831160018114612a865760008415612a74578287013590505b612a7e8582612717565b865550612ae6565b601f198416612a9486612591565b60005b82811015612abc57848901358255600182019150602085019450602081019050612a97565b86831015612ad95784890135612ad5601f8916826126f9565b8355505b6001600288020188555050505b50505050505050565b7f706172656e74206e6f7420666f756e6400000000000000000000000000000000600082015250565b6000612b25601083612272565b9150612b3082612aef565b602082019050919050565b60006020820190508181036000830152612b5481612b18565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612b8757612b86612b5b565b5b80840192508235915067ffffffffffffffff821115612ba957612ba8612b60565b5b602083019250602082023603831315612bc557612bc4612b65565b5b509250929050565b60008235600160c003833603038112612be957612be8612b5b565b5b80830191505092915050565b6000612c046020840184611817565b905092915050565b600067ffffffffffffffff82169050919050565b612c2981612c0c565b8114612c3457600080fd5b50565b600081359050612c4681612c20565b92915050565b6000612c5b6020840184612c37565b905092915050565b612c6c81612c0c565b82525050565b600063ffffffff82169050919050565b612c8b81612c72565b8114612c9657600080fd5b50565b600081359050612ca881612c82565b92915050565b6000612cbd6020840184612c99565b905092915050565b612cce81612c72565b82525050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612d0057612cff612cde565b5b83810192508235915060208301925067ffffffffffffffff821115612d2857612d27612cd4565b5b600182023603831315612d3e57612d3d612cd9565b5b509250929050565b600082825260208201905092915050565b6000612d638385612d46565b9350612d70838584611dd4565b612d79836116d6565b840190509392505050565b600060ff82169050919050565b612d9a81612d84565b8114612da557600080fd5b50565b600081359050612db781612d91565b92915050565b6000612dcc6020840184612da8565b905092915050565b612ddd81612d84565b82525050565b600060c08301612df66000840184612bf5565b612e036000860182611982565b50612e116020840184612c4c565b612e1e6020860182612c63565b50612e2c6040840184612cae565b612e396040860182612cc5565b50612e476060840184612cae565b612e546060860182612cc5565b50612e626080840184612ce3565b8583036080870152612e75838284612d57565b92505050612e8660a0840184612dbd565b612e9360a0860182612dd4565b508091505092915050565b612ea781611762565b82525050565b60006040820190508181036000830152612ec78185612de3565b9050612ed66020830184612e9e565b9392505050565b7f19457468657265756d205369676e6564204d6573736167653a0a000000000000600082015250565b6000612f13601a836128b9565b9150612f1e82612edd565b601a82019050919050565b6000612f3482612f06565b9150612f4082856128c4565b9150612f4c828461290b565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612f9282611762565b9150612f9d83611762565b925082612fad57612fac612f58565b5b828204905092915050565b6000612fc382611762565b9150612fce83611762565b9250828203905081811115612fe657612fe561251a565b5b92915050565b6000612ff782611762565b915061300283611762565b92508261301257613011612f58565b5b828206905092915050565b600061302882611762565b915061303383611762565b925082820190508082111561304b5761304a61251a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006130b6601883612272565b91506130c182613080565b602082019050919050565b600060208201905081810360008301526130e5816130a9565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613122601f83612272565b915061312d826130ec565b602082019050919050565b6000602082019050818103600083015261315181613115565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006131b4602283612272565b91506131bf82613158565b604082019050919050565b600060208201905081810360008301526131e3816131a7565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000613246602283612272565b9150613251826131ea565b604082019050919050565b6000602082019050818103600083015261327581613239565b9050919050565b61328581611798565b82525050565b61329481612d84565b82525050565b60006080820190506132af600083018761327c565b6132bc602083018661328b565b6132c9604083018561327c565b6132d6606083018461327c565b9594505050505056fea264697066735822122022e672d31f5b3fc1798d89b4cdd744a78c5c400b18ac1540db2844718961430e64736f6c63430008110033608060405234801561001057600080fd5b5061169c806100206000396000f3fe6080604052600436106100435760003560e01c80630fcfbd11146100be57806333a88c72146100fb578063b1454caa14610138578063f238ae121461017557610083565b36610083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007a9061059f565b60405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b59061060b565b60405180910390fd5b3480156100ca57600080fd5b506100e560048036038101906100e09190610659565b61019e565b6040516100f291906106bb565b60405180910390f35b34801561010757600080fd5b50610122600480360381019061011d9190610659565b61022e565b60405161012f91906106f1565b60405180910390f35b34801561014457600080fd5b5061015f600480360381019061015a91906107e6565b610278565b60405161016c9190610891565b60405180910390f35b34801561018157600080fd5b5061019c600480360381019061019791906108d8565b6102d1565b005b600080826040516020016101b29190610be1565b604051602081830303815290604052805190602001209050600080600083815260200190815260200160002054905060008111610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610c75565b60405180910390fd5b8092505050919050565b600080826040516020016102429190610be1565b60405160208183030381529060405280519060200120905043600080838152602001908152602001600020541015915050919050565b600061028333610436565b90507fb93c37389233beb85a3a726c3f15c2d15533ee74cb602f20f490dfffef775937338288888888886040516102c09796959493929190610d00565b60405180910390a195945050505050565b600081436102df9190610d99565b90506000836040516020016102f49190610be1565b60405160208183030381529060405280519060200120905060008060008381526020019081526020016000205414610361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035890610e3f565b60405180910390fd5b81600080838152602001908152602001600020819055506001600085600001602081019061038f9190610e5f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008560600160208101906103de9190610e8c565b63ffffffff1663ffffffff168152602001908152602001600020849080600181540180825580915050600190039060005260206000209060040201600090919091909150818161042e919061161c565b505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1690506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff166104f1919061162a565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550919050565b600082825260208201905092915050565b7f74686520576f726d686f6c6520636f6e747261637420646f6573206e6f74206160008201527f6363657074206173736574730000000000000000000000000000000000000000602082015250565b6000610589602c8361051c565b91506105948261052d565b604082019050919050565b600060208201905081810360008301526105b88161057c565b9050919050565b7f756e737570706f72746564000000000000000000000000000000000000000000600082015250565b60006105f5600b8361051c565b9150610600826105bf565b602082019050919050565b60006020820190508181036000830152610624816105e8565b9050919050565b600080fd5b600080fd5b600080fd5b600060c082840312156106505761064f610635565b5b81905092915050565b60006020828403121561066f5761066e61062b565b5b600082013567ffffffffffffffff81111561068d5761068c610630565b5b6106998482850161063a565b91505092915050565b6000819050919050565b6106b5816106a2565b82525050565b60006020820190506106d060008301846106ac565b92915050565b60008115159050919050565b6106eb816106d6565b82525050565b600060208201905061070660008301846106e2565b92915050565b600063ffffffff82169050919050565b6107258161070c565b811461073057600080fd5b50565b6000813590506107428161071c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261076d5761076c610748565b5b8235905067ffffffffffffffff81111561078a5761078961074d565b5b6020830191508360018202830111156107a6576107a5610752565b5b9250929050565b600060ff82169050919050565b6107c3816107ad565b81146107ce57600080fd5b50565b6000813590506107e0816107ba565b92915050565b6000806000806000608086880312156108025761080161062b565b5b600061081088828901610733565b955050602061082188828901610733565b945050604086013567ffffffffffffffff81111561084257610841610630565b5b61084e88828901610757565b93509350506060610861888289016107d1565b9150509295509295909350565b600067ffffffffffffffff82169050919050565b61088b8161086e565b82525050565b60006020820190506108a66000830184610882565b92915050565b6108b5816106a2565b81146108c057600080fd5b50565b6000813590506108d2816108ac565b92915050565b600080604083850312156108ef576108ee61062b565b5b600083013567ffffffffffffffff81111561090d5761090c610630565b5b6109198582860161063a565b925050602061092a858286016108c3565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095f82610934565b9050919050565b61096f81610954565b811461097a57600080fd5b50565b60008135905061098c81610966565b92915050565b60006109a1602084018461097d565b905092915050565b6109b281610954565b82525050565b6109c18161086e565b81146109cc57600080fd5b50565b6000813590506109de816109b8565b92915050565b60006109f360208401846109cf565b905092915050565b610a048161086e565b82525050565b6000610a196020840184610733565b905092915050565b610a2a8161070c565b82525050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610a5c57610a5b610a3a565b5b83810192508235915060208301925067ffffffffffffffff821115610a8457610a83610a30565b5b600182023603831315610a9a57610a99610a35565b5b509250929050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610adf8385610aa2565b9350610aec838584610ab3565b610af583610ac2565b840190509392505050565b6000610b0f60208401846107d1565b905092915050565b610b20816107ad565b82525050565b600060c08301610b396000840184610992565b610b4660008601826109a9565b50610b5460208401846109e4565b610b6160208601826109fb565b50610b6f6040840184610a0a565b610b7c6040860182610a21565b50610b8a6060840184610a0a565b610b976060860182610a21565b50610ba56080840184610a3f565b8583036080870152610bb8838284610ad3565b92505050610bc960a0840184610b00565b610bd660a0860182610b17565b508091505092915050565b60006020820190508181036000830152610bfb8184610b26565b905092915050565b7f54686973206d65737361676520776173206e65766572207375626d697474656460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610c5f60218361051c565b9150610c6a82610c03565b604082019050919050565b60006020820190508181036000830152610c8e81610c52565b9050919050565b610c9e81610954565b82525050565b610cad8161070c565b82525050565b600082825260208201905092915050565b6000610cd08385610cb3565b9350610cdd838584610ab3565b610ce683610ac2565b840190509392505050565b610cfa816107ad565b82525050565b600060c082019050610d15600083018a610c95565b610d226020830189610882565b610d2f6040830188610ca4565b610d3c6060830187610ca4565b8181036080830152610d4f818587610cc4565b9050610d5e60a0830184610cf1565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610da4826106a2565b9150610daf836106a2565b9250828201905080821115610dc757610dc6610d6a565b5b92915050565b7f4d657373616765207375626d6974746564206d6f7265207468616e206f6e636560008201527f2100000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e2960218361051c565b9150610e3482610dcd565b604082019050919050565b60006020820190508181036000830152610e5881610e1c565b9050919050565b600060208284031215610e7557610e7461062b565b5b6000610e838482850161097d565b91505092915050565b600060208284031215610ea257610ea161062b565b5b6000610eb084828501610733565b91505092915050565b60008135610ec681610966565b80915050919050565b60008160001b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff610efc84610ecf565b9350801983169250808416831791505092915050565b6000819050919050565b6000610f37610f32610f2d84610934565b610f12565b610934565b9050919050565b6000610f4982610f1c565b9050919050565b6000610f5b82610f3e565b9050919050565b6000819050919050565b610f7582610f50565b610f88610f8182610f62565b8354610edc565b8255505050565b60008135610f9c816109b8565b80915050919050565b60008160a01b9050919050565b60007bffffffffffffffff0000000000000000000000000000000000000000610fda84610fa5565b9350801983169250808416831791505092915050565b600061100b6110066110018461086e565b610f12565b61086e565b9050919050565b6000819050919050565b61102582610ff0565b61103861103182611012565b8354610fb2565b8255505050565b6000813561104c8161071c565b80915050919050565b60008160e01b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000061108e84611055565b9350801983169250808416831791505092915050565b60006110bf6110ba6110b58461070c565b610f12565b61070c565b9050919050565b6000819050919050565b6110d9826110a4565b6110ec6110e5826110c6565b8354611062565b8255505050565b600063ffffffff61110384610ecf565b9350801983169250808416831791505092915050565b611122826110a4565b61113561112e826110c6565b83546110f3565b8255505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126111685761116761113c565b5b80840192508235915067ffffffffffffffff82111561118a57611189611141565b5b6020830192506001820236038313156111a6576111a5611146565b5b509250929050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061122f57607f821691505b602082108103611242576112416111e8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112aa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261126d565b6112b4868361126d565b95508019841693508086168417925050509392505050565b60006112e76112e26112dd846106a2565b610f12565b6106a2565b9050919050565b6000819050919050565b611301836112cc565b61131561130d826112ee565b84845461127a565b825550505050565b600090565b61132a61131d565b6113358184846112f8565b505050565b5b818110156113595761134e600082611322565b60018101905061133b565b5050565b601f82111561139e5761136f81611248565b6113788461125d565b81016020851015611387578190505b61139b6113938561125d565b83018261133a565b50505b505050565b600082821c905092915050565b60006113c1600019846008026113a3565b1980831691505092915050565b60006113da83836113b0565b9150826002028217905092915050565b6113f483836111ae565b67ffffffffffffffff81111561140d5761140c6111b9565b5b6114178254611217565b61142282828561135d565b6000601f831160018114611451576000841561143f578287013590505b61144985826113ce565b8655506114b1565b601f19841661145f86611248565b60005b8281101561148757848901358255600182019150602085019450602081019050611462565b868310156114a457848901356114a0601f8916826113b0565b8355505b6001600288020188555050505b50505050505050565b6114c58383836113ea565b505050565b600081356114d7816107ba565b80915050919050565b600060ff6114ed84610ecf565b9350801983169250808416831791505092915050565b600061151e611519611514846107ad565b610f12565b6107ad565b9050919050565b6000819050919050565b61153882611503565b61154b61154482611525565b83546114e0565b8255505050565b60008101600083018061156481610eb9565b90506115708184610f6c565b50505060008101602083018061158581610f8f565b9050611591818461101c565b5050506000810160408301806115a68161103f565b90506115b281846110d0565b5050506001810160608301806115c78161103f565b90506115d38184611119565b50505060028101608083016115e8818561114b565b6115f38183866114ba565b505050506003810160a0830180611609816114ca565b9050611615818461152f565b5050505050565b6116268282611552565b5050565b60006116358261086e565b91506116408361086e565b9250828201905067ffffffffffffffff8111156116605761165f610d6a565b5b9291505056fea26469706673582212200716197c4ad34b24098a7cc549f09037b57fefc9ce153e67b883da05a86928b064736f6c63430008110033",
}

// ManagementContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ManagementContractMetaData.ABI instead.
var ManagementContractABI = ManagementContractMetaData.ABI

// ManagementContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ManagementContractMetaData.Bin instead.
var ManagementContractBin = ManagementContractMetaData.Bin

// DeployManagementContract deploys a new Ethereum contract, binding an instance of ManagementContract to it.
func DeployManagementContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *ManagementContract, error) {
	parsed, err := ManagementContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ManagementContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ManagementContract{ManagementContractCaller: ManagementContractCaller{contract: contract}, ManagementContractTransactor: ManagementContractTransactor{contract: contract}, ManagementContractFilterer: ManagementContractFilterer{contract: contract}}, nil
}

// ManagementContract is an auto generated Go binding around an Ethereum contract.
type ManagementContract struct {
	ManagementContractCaller     // Read-only binding to the contract
	ManagementContractTransactor // Write-only binding to the contract
	ManagementContractFilterer   // Log filterer for contract events
}

// ManagementContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ManagementContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ManagementContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ManagementContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ManagementContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ManagementContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ManagementContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ManagementContractSession struct {
	Contract     *ManagementContract // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ManagementContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ManagementContractCallerSession struct {
	Contract *ManagementContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// ManagementContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ManagementContractTransactorSession struct {
	Contract     *ManagementContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// ManagementContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ManagementContractRaw struct {
	Contract *ManagementContract // Generic contract binding to access the raw methods on
}

// ManagementContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ManagementContractCallerRaw struct {
	Contract *ManagementContractCaller // Generic read-only contract binding to access the raw methods on
}

// ManagementContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ManagementContractTransactorRaw struct {
	Contract *ManagementContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewManagementContract creates a new instance of ManagementContract, bound to a specific deployed contract.
func NewManagementContract(address common.Address, backend bind.ContractBackend) (*ManagementContract, error) {
	contract, err := bindManagementContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ManagementContract{ManagementContractCaller: ManagementContractCaller{contract: contract}, ManagementContractTransactor: ManagementContractTransactor{contract: contract}, ManagementContractFilterer: ManagementContractFilterer{contract: contract}}, nil
}

// NewManagementContractCaller creates a new read-only instance of ManagementContract, bound to a specific deployed contract.
func NewManagementContractCaller(address common.Address, caller bind.ContractCaller) (*ManagementContractCaller, error) {
	contract, err := bindManagementContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ManagementContractCaller{contract: contract}, nil
}

// NewManagementContractTransactor creates a new write-only instance of ManagementContract, bound to a specific deployed contract.
func NewManagementContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ManagementContractTransactor, error) {
	contract, err := bindManagementContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ManagementContractTransactor{contract: contract}, nil
}

// NewManagementContractFilterer creates a new log filterer instance of ManagementContract, bound to a specific deployed contract.
func NewManagementContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ManagementContractFilterer, error) {
	contract, err := bindManagementContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ManagementContractFilterer{contract: contract}, nil
}

// bindManagementContract binds a generic wrapper to an already deployed contract.
func bindManagementContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ManagementContractABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ManagementContract *ManagementContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ManagementContract.Contract.ManagementContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ManagementContract *ManagementContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ManagementContract.Contract.ManagementContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ManagementContract *ManagementContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ManagementContract.Contract.ManagementContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ManagementContract *ManagementContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ManagementContract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ManagementContract *ManagementContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ManagementContract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ManagementContract *ManagementContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ManagementContract.Contract.contract.Transact(opts, method, params...)
}

// Attested is a free data retrieval call binding the contract method 0x43348b2f.
//
// Solidity: function Attested(address _addr) view returns(bool)
func (_ManagementContract *ManagementContractCaller) Attested(opts *bind.CallOpts, _addr common.Address) (bool, error) {
	var out []interface{}
	err := _ManagementContract.contract.Call(opts, &out, "Attested", _addr)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Attested is a free data retrieval call binding the contract method 0x43348b2f.
//
// Solidity: function Attested(address _addr) view returns(bool)
func (_ManagementContract *ManagementContractSession) Attested(_addr common.Address) (bool, error) {
	return _ManagementContract.Contract.Attested(&_ManagementContract.CallOpts, _addr)
}

// Attested is a free data retrieval call binding the contract method 0x43348b2f.
//
// Solidity: function Attested(address _addr) view returns(bool)
func (_ManagementContract *ManagementContractCallerSession) Attested(_addr common.Address) (bool, error) {
	return _ManagementContract.Contract.Attested(&_ManagementContract.CallOpts, _addr)
}

// GetHostAddresses is a free data retrieval call binding the contract method 0x324ff866.
//
// Solidity: function GetHostAddresses() view returns(string[])
func (_ManagementContract *ManagementContractCaller) GetHostAddresses(opts *bind.CallOpts) ([]string, error) {
	var out []interface{}
	err := _ManagementContract.contract.Call(opts, &out, "GetHostAddresses")

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetHostAddresses is a free data retrieval call binding the contract method 0x324ff866.
//
// Solidity: function GetHostAddresses() view returns(string[])
func (_ManagementContract *ManagementContractSession) GetHostAddresses() ([]string, error) {
	return _ManagementContract.Contract.GetHostAddresses(&_ManagementContract.CallOpts)
}

// GetHostAddresses is a free data retrieval call binding the contract method 0x324ff866.
//
// Solidity: function GetHostAddresses() view returns(string[])
func (_ManagementContract *ManagementContractCallerSession) GetHostAddresses() ([]string, error) {
	return _ManagementContract.Contract.GetHostAddresses(&_ManagementContract.CallOpts)
}

// GetParentRollup is a free data retrieval call binding the contract method 0x31b1d255.
//
// Solidity: function GetParentRollup((uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)) element) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractCaller) GetParentRollup(opts *bind.CallOpts, element StructsTreeElement) (bool, StructsTreeElement, error) {
	var out []interface{}
	err := _ManagementContract.contract.Call(opts, &out, "GetParentRollup", element)

	if err != nil {
		return *new(bool), *new(StructsTreeElement), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)
	out1 := *abi.ConvertType(out[1], new(StructsTreeElement)).(*StructsTreeElement)

	return out0, out1, err

}

// GetParentRollup is a free data retrieval call binding the contract method 0x31b1d255.
//
// Solidity: function GetParentRollup((uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)) element) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractSession) GetParentRollup(element StructsTreeElement) (bool, StructsTreeElement, error) {
	return _ManagementContract.Contract.GetParentRollup(&_ManagementContract.CallOpts, element)
}

// GetParentRollup is a free data retrieval call binding the contract method 0x31b1d255.
//
// Solidity: function GetParentRollup((uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)) element) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractCallerSession) GetParentRollup(element StructsTreeElement) (bool, StructsTreeElement, error) {
	return _ManagementContract.Contract.GetParentRollup(&_ManagementContract.CallOpts, element)
}

// GetRollupByHash is a free data retrieval call binding the contract method 0x8236a7ba.
//
// Solidity: function GetRollupByHash(bytes32 rollupHash) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractCaller) GetRollupByHash(opts *bind.CallOpts, rollupHash [32]byte) (bool, StructsTreeElement, error) {
	var out []interface{}
	err := _ManagementContract.contract.Call(opts, &out, "GetRollupByHash", rollupHash)

	if err != nil {
		return *new(bool), *new(StructsTreeElement), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)
	out1 := *abi.ConvertType(out[1], new(StructsTreeElement)).(*StructsTreeElement)

	return out0, out1, err

}

// GetRollupByHash is a free data retrieval call binding the contract method 0x8236a7ba.
//
// Solidity: function GetRollupByHash(bytes32 rollupHash) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractSession) GetRollupByHash(rollupHash [32]byte) (bool, StructsTreeElement, error) {
	return _ManagementContract.Contract.GetRollupByHash(&_ManagementContract.CallOpts, rollupHash)
}

// GetRollupByHash is a free data retrieval call binding the contract method 0x8236a7ba.
//
// Solidity: function GetRollupByHash(bytes32 rollupHash) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractCallerSession) GetRollupByHash(rollupHash [32]byte) (bool, StructsTreeElement, error) {
	return _ManagementContract.Contract.GetRollupByHash(&_ManagementContract.CallOpts, rollupHash)
}

// GetRollupByID is a free data retrieval call binding the contract method 0x92aaec79.
//
// Solidity: function GetRollupByID(uint256 rollupID) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractCaller) GetRollupByID(opts *bind.CallOpts, rollupID *big.Int) (bool, StructsTreeElement, error) {
	var out []interface{}
	err := _ManagementContract.contract.Call(opts, &out, "GetRollupByID", rollupID)

	if err != nil {
		return *new(bool), *new(StructsTreeElement), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)
	out1 := *abi.ConvertType(out[1], new(StructsTreeElement)).(*StructsTreeElement)

	return out0, out1, err

}

// GetRollupByID is a free data retrieval call binding the contract method 0x92aaec79.
//
// Solidity: function GetRollupByID(uint256 rollupID) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractSession) GetRollupByID(rollupID *big.Int) (bool, StructsTreeElement, error) {
	return _ManagementContract.Contract.GetRollupByID(&_ManagementContract.CallOpts, rollupID)
}

// GetRollupByID is a free data retrieval call binding the contract method 0x92aaec79.
//
// Solidity: function GetRollupByID(uint256 rollupID) view returns(bool, (uint256,uint256,(bytes32,bytes32,address,bytes32,uint256)))
func (_ManagementContract *ManagementContractCallerSession) GetRollupByID(rollupID *big.Int) (bool, StructsTreeElement, error) {
	return _ManagementContract.Contract.GetRollupByID(&_ManagementContract.CallOpts, rollupID)
}

// HasSecondCousinFork is a free data retrieval call binding the contract method 0x57b70600.
//
// Solidity: function HasSecondCousinFork() view returns(bool)
func (_ManagementContract *ManagementContractCaller) HasSecondCousinFork(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ManagementContract.contract.Call(opts, &out, "HasSecondCousinFork")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasSecondCousinFork is a free data retrieval call binding the contract method 0x57b70600.
//
// Solidity: function HasSecondCousinFork() view returns(bool)
func (_ManagementContract *ManagementContractSession) HasSecondCousinFork() (bool, error) {
	return _ManagementContract.Contract.HasSecondCousinFork(&_ManagementContract.CallOpts)
}

// HasSecondCousinFork is a free data retrieval call binding the contract method 0x57b70600.
//
// Solidity: function HasSecondCousinFork() view returns(bool)
func (_ManagementContract *ManagementContractCallerSession) HasSecondCousinFork() (bool, error) {
	return _ManagementContract.Contract.HasSecondCousinFork(&_ManagementContract.CallOpts)
}

// IsWithdrawalAvailable is a free data retrieval call binding the contract method 0xa52f433c.
//
// Solidity: function IsWithdrawalAvailable() view returns(bool)
func (_ManagementContract *ManagementContractCaller) IsWithdrawalAvailable(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ManagementContract.contract.Call(opts, &out, "IsWithdrawalAvailable")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsWithdrawalAvailable is a free data retrieval call binding the contract method 0xa52f433c.
//
// Solidity: function IsWithdrawalAvailable() view returns(bool)
func (_ManagementContract *ManagementContractSession) IsWithdrawalAvailable() (bool, error) {
	return _ManagementContract.Contract.IsWithdrawalAvailable(&_ManagementContract.CallOpts)
}

// IsWithdrawalAvailable is a free data retrieval call binding the contract method 0xa52f433c.
//
// Solidity: function IsWithdrawalAvailable() view returns(bool)
func (_ManagementContract *ManagementContractCallerSession) IsWithdrawalAvailable() (bool, error) {
	return _ManagementContract.Contract.IsWithdrawalAvailable(&_ManagementContract.CallOpts)
}

// MessageBus is a free data retrieval call binding the contract method 0xa1a227fa.
//
// Solidity: function messageBus() view returns(address)
func (_ManagementContract *ManagementContractCaller) MessageBus(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ManagementContract.contract.Call(opts, &out, "messageBus")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MessageBus is a free data retrieval call binding the contract method 0xa1a227fa.
//
// Solidity: function messageBus() view returns(address)
func (_ManagementContract *ManagementContractSession) MessageBus() (common.Address, error) {
	return _ManagementContract.Contract.MessageBus(&_ManagementContract.CallOpts)
}

// MessageBus is a free data retrieval call binding the contract method 0xa1a227fa.
//
// Solidity: function messageBus() view returns(address)
func (_ManagementContract *ManagementContractCallerSession) MessageBus() (common.Address, error) {
	return _ManagementContract.Contract.MessageBus(&_ManagementContract.CallOpts)
}

// AddRollup is a paid mutator transaction binding the contract method 0x53e145f7.
//
// Solidity: function AddRollup((bytes32,bytes32,address,bytes32,uint256) r, string _rollupData, (uint256,bytes32,(address,uint64,uint32,uint32,bytes,uint8)[]) crossChainData) returns()
func (_ManagementContract *ManagementContractTransactor) AddRollup(opts *bind.TransactOpts, r StructsMetaRollup, _rollupData string, crossChainData StructsHeaderCrossChainData) (*types.Transaction, error) {
	return _ManagementContract.contract.Transact(opts, "AddRollup", r, _rollupData, crossChainData)
}

// AddRollup is a paid mutator transaction binding the contract method 0x53e145f7.
//
// Solidity: function AddRollup((bytes32,bytes32,address,bytes32,uint256) r, string _rollupData, (uint256,bytes32,(address,uint64,uint32,uint32,bytes,uint8)[]) crossChainData) returns()
func (_ManagementContract *ManagementContractSession) AddRollup(r StructsMetaRollup, _rollupData string, crossChainData StructsHeaderCrossChainData) (*types.Transaction, error) {
	return _ManagementContract.Contract.AddRollup(&_ManagementContract.TransactOpts, r, _rollupData, crossChainData)
}

// AddRollup is a paid mutator transaction binding the contract method 0x53e145f7.
//
// Solidity: function AddRollup((bytes32,bytes32,address,bytes32,uint256) r, string _rollupData, (uint256,bytes32,(address,uint64,uint32,uint32,bytes,uint8)[]) crossChainData) returns()
func (_ManagementContract *ManagementContractTransactorSession) AddRollup(r StructsMetaRollup, _rollupData string, crossChainData StructsHeaderCrossChainData) (*types.Transaction, error) {
	return _ManagementContract.Contract.AddRollup(&_ManagementContract.TransactOpts, r, _rollupData, crossChainData)
}

// InitializeNetworkSecret is a paid mutator transaction binding the contract method 0x59a90071.
//
// Solidity: function InitializeNetworkSecret(address _aggregatorID, bytes _initSecret, string _hostAddress, string _genesisAttestation) returns()
func (_ManagementContract *ManagementContractTransactor) InitializeNetworkSecret(opts *bind.TransactOpts, _aggregatorID common.Address, _initSecret []byte, _hostAddress string, _genesisAttestation string) (*types.Transaction, error) {
	return _ManagementContract.contract.Transact(opts, "InitializeNetworkSecret", _aggregatorID, _initSecret, _hostAddress, _genesisAttestation)
}

// InitializeNetworkSecret is a paid mutator transaction binding the contract method 0x59a90071.
//
// Solidity: function InitializeNetworkSecret(address _aggregatorID, bytes _initSecret, string _hostAddress, string _genesisAttestation) returns()
func (_ManagementContract *ManagementContractSession) InitializeNetworkSecret(_aggregatorID common.Address, _initSecret []byte, _hostAddress string, _genesisAttestation string) (*types.Transaction, error) {
	return _ManagementContract.Contract.InitializeNetworkSecret(&_ManagementContract.TransactOpts, _aggregatorID, _initSecret, _hostAddress, _genesisAttestation)
}

// InitializeNetworkSecret is a paid mutator transaction binding the contract method 0x59a90071.
//
// Solidity: function InitializeNetworkSecret(address _aggregatorID, bytes _initSecret, string _hostAddress, string _genesisAttestation) returns()
func (_ManagementContract *ManagementContractTransactorSession) InitializeNetworkSecret(_aggregatorID common.Address, _initSecret []byte, _hostAddress string, _genesisAttestation string) (*types.Transaction, error) {
	return _ManagementContract.Contract.InitializeNetworkSecret(&_ManagementContract.TransactOpts, _aggregatorID, _initSecret, _hostAddress, _genesisAttestation)
}

// InitializeTree is a paid mutator transaction binding the contract method 0x73bba846.
//
// Solidity: function InitializeTree((bytes32,bytes32,address,bytes32,uint256) r) returns()
func (_ManagementContract *ManagementContractTransactor) InitializeTree(opts *bind.TransactOpts, r StructsMetaRollup) (*types.Transaction, error) {
	return _ManagementContract.contract.Transact(opts, "InitializeTree", r)
}

// InitializeTree is a paid mutator transaction binding the contract method 0x73bba846.
//
// Solidity: function InitializeTree((bytes32,bytes32,address,bytes32,uint256) r) returns()
func (_ManagementContract *ManagementContractSession) InitializeTree(r StructsMetaRollup) (*types.Transaction, error) {
	return _ManagementContract.Contract.InitializeTree(&_ManagementContract.TransactOpts, r)
}

// InitializeTree is a paid mutator transaction binding the contract method 0x73bba846.
//
// Solidity: function InitializeTree((bytes32,bytes32,address,bytes32,uint256) r) returns()
func (_ManagementContract *ManagementContractTransactorSession) InitializeTree(r StructsMetaRollup) (*types.Transaction, error) {
	return _ManagementContract.Contract.InitializeTree(&_ManagementContract.TransactOpts, r)
}

// RequestNetworkSecret is a paid mutator transaction binding the contract method 0xe34fbfc8.
//
// Solidity: function RequestNetworkSecret(string requestReport) returns()
func (_ManagementContract *ManagementContractTransactor) RequestNetworkSecret(opts *bind.TransactOpts, requestReport string) (*types.Transaction, error) {
	return _ManagementContract.contract.Transact(opts, "RequestNetworkSecret", requestReport)
}

// RequestNetworkSecret is a paid mutator transaction binding the contract method 0xe34fbfc8.
//
// Solidity: function RequestNetworkSecret(string requestReport) returns()
func (_ManagementContract *ManagementContractSession) RequestNetworkSecret(requestReport string) (*types.Transaction, error) {
	return _ManagementContract.Contract.RequestNetworkSecret(&_ManagementContract.TransactOpts, requestReport)
}

// RequestNetworkSecret is a paid mutator transaction binding the contract method 0xe34fbfc8.
//
// Solidity: function RequestNetworkSecret(string requestReport) returns()
func (_ManagementContract *ManagementContractTransactorSession) RequestNetworkSecret(requestReport string) (*types.Transaction, error) {
	return _ManagementContract.Contract.RequestNetworkSecret(&_ManagementContract.TransactOpts, requestReport)
}

// RespondNetworkSecret is a paid mutator transaction binding the contract method 0xbbd79e15.
//
// Solidity: function RespondNetworkSecret(address attesterID, address requesterID, bytes attesterSig, bytes responseSecret, string hostAddress, bool verifyAttester) returns()
func (_ManagementContract *ManagementContractTransactor) RespondNetworkSecret(opts *bind.TransactOpts, attesterID common.Address, requesterID common.Address, attesterSig []byte, responseSecret []byte, hostAddress string, verifyAttester bool) (*types.Transaction, error) {
	return _ManagementContract.contract.Transact(opts, "RespondNetworkSecret", attesterID, requesterID, attesterSig, responseSecret, hostAddress, verifyAttester)
}

// RespondNetworkSecret is a paid mutator transaction binding the contract method 0xbbd79e15.
//
// Solidity: function RespondNetworkSecret(address attesterID, address requesterID, bytes attesterSig, bytes responseSecret, string hostAddress, bool verifyAttester) returns()
func (_ManagementContract *ManagementContractSession) RespondNetworkSecret(attesterID common.Address, requesterID common.Address, attesterSig []byte, responseSecret []byte, hostAddress string, verifyAttester bool) (*types.Transaction, error) {
	return _ManagementContract.Contract.RespondNetworkSecret(&_ManagementContract.TransactOpts, attesterID, requesterID, attesterSig, responseSecret, hostAddress, verifyAttester)
}

// RespondNetworkSecret is a paid mutator transaction binding the contract method 0xbbd79e15.
//
// Solidity: function RespondNetworkSecret(address attesterID, address requesterID, bytes attesterSig, bytes responseSecret, string hostAddress, bool verifyAttester) returns()
func (_ManagementContract *ManagementContractTransactorSession) RespondNetworkSecret(attesterID common.Address, requesterID common.Address, attesterSig []byte, responseSecret []byte, hostAddress string, verifyAttester bool) (*types.Transaction, error) {
	return _ManagementContract.Contract.RespondNetworkSecret(&_ManagementContract.TransactOpts, attesterID, requesterID, attesterSig, responseSecret, hostAddress, verifyAttester)
}

// ManagementContractLogManagementContractCreatedIterator is returned from FilterLogManagementContractCreated and is used to iterate over the raw logs and unpacked data for LogManagementContractCreated events raised by the ManagementContract contract.
type ManagementContractLogManagementContractCreatedIterator struct {
	Event *ManagementContractLogManagementContractCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ManagementContractLogManagementContractCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ManagementContractLogManagementContractCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ManagementContractLogManagementContractCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ManagementContractLogManagementContractCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ManagementContractLogManagementContractCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ManagementContractLogManagementContractCreated represents a LogManagementContractCreated event raised by the ManagementContract contract.
type ManagementContractLogManagementContractCreated struct {
	MessageBusAddress common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterLogManagementContractCreated is a free log retrieval operation binding the contract event 0xbd726cf82ac9c3260b1495107182e336e0654b25c10915648c0cc15b2bb72cbf.
//
// Solidity: event LogManagementContractCreated(address messageBusAddress)
func (_ManagementContract *ManagementContractFilterer) FilterLogManagementContractCreated(opts *bind.FilterOpts) (*ManagementContractLogManagementContractCreatedIterator, error) {

	logs, sub, err := _ManagementContract.contract.FilterLogs(opts, "LogManagementContractCreated")
	if err != nil {
		return nil, err
	}
	return &ManagementContractLogManagementContractCreatedIterator{contract: _ManagementContract.contract, event: "LogManagementContractCreated", logs: logs, sub: sub}, nil
}

// WatchLogManagementContractCreated is a free log subscription operation binding the contract event 0xbd726cf82ac9c3260b1495107182e336e0654b25c10915648c0cc15b2bb72cbf.
//
// Solidity: event LogManagementContractCreated(address messageBusAddress)
func (_ManagementContract *ManagementContractFilterer) WatchLogManagementContractCreated(opts *bind.WatchOpts, sink chan<- *ManagementContractLogManagementContractCreated) (event.Subscription, error) {

	logs, sub, err := _ManagementContract.contract.WatchLogs(opts, "LogManagementContractCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ManagementContractLogManagementContractCreated)
				if err := _ManagementContract.contract.UnpackLog(event, "LogManagementContractCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogManagementContractCreated is a log parse operation binding the contract event 0xbd726cf82ac9c3260b1495107182e336e0654b25c10915648c0cc15b2bb72cbf.
//
// Solidity: event LogManagementContractCreated(address messageBusAddress)
func (_ManagementContract *ManagementContractFilterer) ParseLogManagementContractCreated(log types.Log) (*ManagementContractLogManagementContractCreated, error) {
	event := new(ManagementContractLogManagementContractCreated)
	if err := _ManagementContract.contract.UnpackLog(event, "LogManagementContractCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
